# encoding: utf-8
# vi: filetype=ruby

html

check_tag_name_downcase do |tag|
  if tag.tag_name =~ /[A-Z]/
    ["标签名必须小写", :error]
  end
end

check_tag_img_must_have_alt do |tag|
  if tag.tag_name_equal? 'img'
    unless tag.has_prop?(:alt)
      ["img标签必须加上alt属性", :error]
    end
  end
end

check_tag_hyperlink_with_target do |tag|
  if tag.tag_name_equal? 'a' and tag.prop_value(:href) =~ /^#/ and tag.prop_value(:target) != '_self'
    ['功能a必须加target="_self"，除非preventDefault过', :warn]
  end
end

check_tag_hyperlink_with_title do |tag|
  if tag.tag_name_equal? 'a' and tag.prop_value(:href) =~ /^[^#]/
    unless (prop = tag.prop_value(:title)) and !prop.empty?
      ['非功能能点的a标签必须加上title属性', :error]
    end
  end
end

check_tag_unique_script_import do |tag|
  if tag.tag_name_equal? 'script'
    src = tag.prop_value(:src).to_s
    if !src.empty? and tag.context.script_used? src
      ["避免重复引用同一或相同功能文件", :error]
    end
  end
end

check_tag_unique_style_import do |tag|
  if tag.tag_name_equal? 'link' and tag.prop_value(:rel) =~ /stylesheet/i
    src = tag.prop_value(:href).to_s
    if !src.empty? and tag.context.style_used? src
      ["避免重复引用同一或相同功能文件", :error]
    end
  end
end

check_tag_no_import_in_style_tag do |tag|
  if tag.tag_name_equal? 'style' and tag.inner_text =~ /@import\s/m
    ["不通过@import在页面上引入CSS", :error]
  end
end

check_tag_head_contain_meta_and_title do |tag|
  if tag.tag_name_equal? 'head'
    children = tag.children
    has_meta = children.any? { |e| e.tag_name_equal? 'meta' and e.prop_value('charset') }
    has_title = children.any? { |e| e.tag_name_equal? 'title' }
    unless has_meta and has_title
      ["head必须包含字符集meta和title", :error]
    end
  end
end

check_tag_block_in_block do |tag|
  if !tag.tag_name_equal?('a') and tag.inline? and tag.children.any? { |e| !e.inline? }
    ["行内标签不得包含块级标签，a标签例外", :error]
  end
end

check_tag_form_element_with_name do |tag|
  if (tag.tag_name_equal?('input') and %w(text radio checkbox).include?(tag.prop_value('type').to_s.downcase) or 
  tag.tag_name_equal?('select') or
  tag.tag_name_equal?('textarea'))
    val = tag.prop_value('name')
    unless val and !val.empty?
      ["text、radio、checkbox、textarea、select必须加name属性", :error]
    end
  end
end

check_tag_form_button do |tag|
  if tag.tag_name_equal?('input') and %w(button submit reset).include?(tag.prop_value('type').to_s.downcase)
    ["所有按钮必须用button（button/submit/reset）", :error]
  end
end

check_tag_css_in_head do |tag|
  if tag.tag_name_equal?('link') and tag.prop_value(:rel) =~ /stylesheet/i
    if tag.parent and !(tag.parent.tag_name_equal? 'head')
      ["外链CSS置于head里(例外：应用里的footer样式)", :warn]
    end
  end
end

check_tag_closed do |tag|
  if !tag.closed? or (tag.auto_close? and !tag.self_closed?)
    ["标签必须正确闭合", :error]
  end
end

check_tag_html_template do |tag|
  info = ["新页面按库中的HTML基本结构模板书写基本页面结构", :warn]
  if tag.tag_name_equal?('head')
    if  !tag.children.any? { |e| e === 'meta[name==description]' } or
        !tag.children.any? { |e| e === 'meta[name==keywords]' }
      info
    end
  elsif tag.tag_name_equal?('body')
    info unless tag.children.any? { |e| e === 'div#doc' }
  elsif tag === 'div#doc'
    if  !tag.children.any? { |e| e === 'div#header' } or
        !tag.children.any? { |e| e === 'div#footer' } or
        !tag.children.any? { |e| e === 'div#alibar' } or
        !tag.children.any? { |e| e === 'div#content' }
      info
    end
  end
end

